{"version":3,"sources":["components/Button.jsx","components/UserAvatar.jsx","loading.gif","components/Preloader.jsx","components/UserCard.jsx","components/UsersList.jsx","App.js","reportWebVitals.js","index.js"],"names":["button","onClick","label","className","UserAvatar","src","alt","Preloader","class","img","UserCard","current_gender","data","genders","gender","date","Date","dob","date_parse","getDate","slice","getMonth","getFullYear","picture","large","name","title","last","first","location","country","street","number","email","age","phone","UsersList","map","person","i","Key","App","useState","setData","Loader","setLoader","Button","axios","get","then","resp","results","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAceA,MAZf,YAAkC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,MAEtB,OACI,qBAAKC,UAAU,SAAf,SACI,wBAAQF,QAASA,EAAjB,SACKC,O,MCKFE,MAVf,YAA2B,IAANC,EAAK,EAALA,IAEjB,OACI,qBAAKF,UAAU,mBAAf,SACI,qBAAKE,IAAKA,EAAKC,IAAI,QCNhB,MAA0B,oCCY1BC,MATf,WACI,OACI,qBAAKC,MAAM,UAAX,SACI,qBAAKH,IAAKI,EAAKH,IAAI,QC6ChBI,MA9Cf,YAA0B,IAKlBC,EALWC,EAAM,EAANA,KACXC,EACQ,6CADRA,EAEM,6CAINF,EADe,QAAfC,EAAKE,OACYD,EAEAA,EAGrB,IAAIE,EAAO,IAAIC,KAAKJ,EAAKK,IAAIF,MACzBG,GAAc,IAAKH,EAAKI,WAAYC,OAAO,GAAK,KAAO,KAAKL,EAAKM,WAAW,IAAID,OAAO,GAAK,IAAML,EAAKO,cAC3G,OACO,sBAAKnB,UAAU,YAAf,UACI,cAAC,EAAD,CAAYE,IAAKO,EAAKW,QAAQC,QAC9B,sBAAKrB,UAAU,iBAAf,UACC,gCAAK,+EAAL,IAA4BS,EAAKa,KAAKC,MAAQ,IAAMd,EAAKa,KAAKE,KAA9D,OACA,gCAAK,wDAAmBf,EAAKa,KAAKG,YAGnC,sBAAKzB,UAAU,SAAf,UACC,wDAAmBQ,KAGpB,sBAAKR,UAAU,oBAAf,UACC,oEAAqBS,EAAKiB,SAASC,QAAU,KAAOlB,EAAKiB,SAASE,OAAON,KAAO,KAAOb,EAAKiB,SAASE,OAAOC,UAE7G,sBAAK7B,UAAU,mBAAf,UACC,4CAAsBS,EAAKqB,SAE5B,sBAAK9B,UAAU,sBAAf,UACC,+GAA6Be,KAE9B,sBAAKf,UAAU,iBAAf,UACI,gFAAuBS,EAAKK,IAAIiB,OAEpC,sBAAK/B,UAAU,kBAAf,UACC,mGAA2BS,EAAKuB,aC1BjCC,MAff,YAA2B,IAAPxB,EAAM,EAANA,KAEhB,OACI,qBAAKT,UAAU,aAAf,SACI,qBAAKA,UAAU,cAAf,SACCS,EAAKyB,KAAI,SAACC,EAAQC,GAAT,OACV,cAAC,EAAD,CAAU3B,KAAM0B,EAASE,IAAOD,Y,iBC4B7BE,MA7Bf,WACE,MAAqBC,mBAAS,IAA9B,mBAAO9B,EAAP,KAAY+B,EAAZ,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAeC,EAAf,KAUA,OACE,sBAAK1C,UAAU,UAAf,UACa,GAAVyC,GACD,cAAC,EAAD,IAEA,+IAGA,cAACE,EAAD,CAAQ5C,MAAO,8FAAoBD,QAjBvC,WACE4C,GAAU,GACVE,IAAMC,IAAI,yCAAyCC,MAAK,SAACC,GACvDL,GAAU,GACVF,EAAQO,EAAKtC,KAAKuC,eAcJ,GAAbvC,EAAKwC,QACN,cAAC,EAAD,CAAWxC,KAAMA,QClBRyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.191d8f5d.chunk.js","sourcesContent":["import react from \"react\";\r\n\r\nfunction button({onClick, label}){\r\n\r\n    return(\r\n        <div className=\"button\">\r\n            <button onClick={onClick}>\r\n                {label}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default button;","import react from \"react\";\r\n\r\nfunction UserAvatar({src}){\r\n\r\n    return(\r\n        <div className=\"card-item__image\">\r\n            <img src={src} alt=\"\" />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserAvatar;","export default __webpack_public_path__ + \"static/media/loading.45dec5c5.gif\";","import react from \"react\";\r\nimport img from \"../loading.gif\";\r\n\r\nfunction Preloader(){\r\n    return(      \r\n        <div class=\"loading\">\r\n            <img src={img} alt=\"\"></img>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Preloader;","import react from \"react\";\r\nimport \"./style.css\";\r\nimport UserAvatar from \"./UserAvatar\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nfunction UserCard({data}){\r\n    let genders = {\r\n        female: \"Женский\",\r\n        male: \"Мужской\"\r\n    }\r\n    let current_gender;\r\n    if (data.gender == 'male') {\r\n        current_gender = genders.male;\r\n    } else {\r\n        current_gender = genders.female;\r\n    }\r\n\r\n    let date = new Date(data.dob.date) \r\n    let date_parse = ('0'+(date.getDate())).slice(-2) + \".\" + ('0'+(date.getMonth()+1)).slice(-2) + \".\" + date.getFullYear();\r\n    return(\r\n           <div className=\"card-item\">\r\n               <UserAvatar src={data.picture.large}/>\r\n               <div className=\"card-item__fio\">\r\n                <div><span>Фамилия:</span> {data.name.title + \" \" + data.name.last} </div> \r\n                <div><span>Имя: </span>{data.name.first}</div>                \r\n               </div>\r\n               \r\n               <div className=\"gender\">\r\n                <span>Пол: </span>{current_gender}\r\n               </div>\r\n\r\n               <div className=\"card-item_address\">\r\n                <span>Адрес: </span>{data.location.country + \", \" + data.location.street.name + \", \" + data.location.street.number}\r\n                </div>  \r\n               <div className=\"card-item__email\">\r\n                <span>e-mail: </span>{data.email}\r\n               </div>\r\n               <div className=\"card-item__birthday\">\r\n                <span>День Рождения: </span>{date_parse}\r\n               </div>\r\n               <div className=\"card-item__age\">\r\n                   <span>Возраст: </span>{data.dob.age}\r\n               </div>\r\n               <div className=\"card-item__cell\">\r\n                <span>Моб.телефон: </span>{data.phone}\r\n               </div>\r\n           </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserCard;","import react from \"react\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nfunction UsersList({data}){\r\n\r\n    return(\r\n        <div className=\"users-list\">\r\n            <div className=\"cards-block\">\r\n            {data.map((person, i) => ( \r\n            <UserCard data={person}  Key = {i}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default UsersList;","\nimport Button from \"./components/Button\";\nimport UsersList from \"./components/UsersList\";\nimport axios from 'axios';\nimport {useState} from 'react';\nimport Preloader from \"./components/Preloader\";\nimport img from \"./loading.gif\";\n\nfunction App() {\n  const [data,setData]=useState([]);\n  const [Loader, setLoader]=useState(false);\n  function SumbmitHandler(){\n    setLoader(true);\n    axios.get('https://randomuser.me/api/?results=10').then((resp) => {\n      setLoader(false);\n      setData(resp.data.results);\n      //console.log(resp.data.results);\n    });\n  }\n  //console.log(data);\n  return (\n    <div className=\"Persons\">\n      {Loader == true &&\n      <Preloader/>\n      }\n      <h1>\n        Вывод пользователей\n      </h1>\n      <Button label={\"Запросить данные\"} onClick={SumbmitHandler}/>\n      {data.length!=0 &&\n      <UsersList data={data}/>\n      }\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}